<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAA5GAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAALEwAACxMBAJqcGAAAF+tJREFUeJztnQuUXlV5/r8kCl64CIWmSSff5HzzOVPHlltEbLkELBcV
        qFiKl5IFqCwqrVWpiDagIipGEFKXglJBQFliWXJJ6QoFQRCQUBQCaA3IpQmXCEIuEEhCSGKfNzkfjMN8
        M3Pes/d+99nn+a21V+z/z5zv2fvs99mXsy+NBiGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
        EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEB3NZnNKlmU79fb2/iX+3R/pCPzvY/Dvh+V/Ix06
        ffr0mfhPJ1hrFQYHB7eC5hY07tpqtfaCtoNynaJ3Fv7f35PnY3f8d4N9fX3T8GeTrHUTYkpPT8/2CI7D
        EDCnIF2C9HOkZxAovx8t4b95FIG2Z2i90PoGCW6kjyGdg3Q90iNj6e2Sh7VIv0T6EdKXkY6COezWoDGQ
        VJGWEoF7MCr71xAEdyFtUATOde12e8dQehH078TvnoHf/QX+Xa8J9oL5W4l/5+Hfj0svqBFJL4cQLZNQ
        mQ9E+j4q9PMlgkPM4lQ8b6JPsTCobfOu+43Q/KLvgB+HITyF9B38770bNANSFdByTkel/SrSYw6CQLrL
        7/WldebMma9C4L8Lv3Up0mrroB8lPYz0hb6+vravsiCkFAj8P0MlvQgBu85RpV+RT/g5R7r4ePaJ+I3H
        IwjuImmjzD/AtN7uo1wIKQwq41+gYl6WKcb1o7T8Mtn35661NpvN7fDsz+E3no4gmMum22ReBdni8ICE
        p91ub4NK+G+ux8t43oP55zJnDAwMbI3nnj6eLw0VTAuRDnFZXoSMSrb5e7zqM9gYwb9E5hA8aF0SQaB6
        Tcjj1ejhZC7LjpA/QBbqyOc4TxX4EVlU40orntnvS2vESb62zB4cHNzCVTkSson8k96TniruUoxn3+hI
        qnx+/Kx8QYggIK3Sfcj/Ho7Kk9ScSahQp2YOJ/mGt1oI/re4EIrn/DGed20EAWie8rmZUxue10+QhMkX
        x/zEY0XdgIr6bhda8az98awnrAMvwjRPll67KGNSI3p7e/8Eleduz63USQ6kTsSzTsv89VBG0/9Ivi/g
        /GzzF5EvIX0aZfeRfEnvbKQ5SN/C//0DWVaM9KyBziUcEpBxIyvOUHEe8lwpLyirUya7JLBCBTv+vRj/
        Hi27/yZPnvx6rW60yH+KZ+wnBoHn/TgLswpRJggPLVvmJHFQSXby2JVehPQFWTxUVqes5sv8jvdl1d0t
        0Hq8wwnKEWm321vKqsd8s9RSjyb2omyv9pkXUmHkO7KHCrgeFe9yVLx9Xens7+/fAc+8w1OQPIj0eZef
        JAsyKd96fEnmp2cgxvZpo7yRWJEZdFSMBxxWNBmTX+w6kPK5ifs8BIZsUz68EdGsuWx/zs8MWOkhv3Os
        80ciIV/We6fDyjW/r6/vza515l8lXE9Mypr6d+Hx0a6pzw8kOQVal7nMu6NJWFJxZBZ9vqMK9SSC6QM+
        RCIIXoPfuMlh5X9STuNpRBz4w8l7BN+F/o2OymEj5wRqDgL2M44q07ypU6f+kSeZshjpCkc6ZU7iHGlV
        PWn1jhyLhjzc48gIZcEQNxPVkbwildrNl+///5eGx5YUv3Guo+B/DM/ax5fOkMhhJtnmNQYuegPyifCt
        1nkiAZG98Xjpi0sG/7MyY+1TJ1rq9ztq6a6XCUSfWi2Aif+1i8+2ss7BYw+OxAZe+n+UrDCPuviePxpy
        yhB+Z1XJyi1fI2Y3PPZQrGm32z3I4wIHRnlVI+FyIjl40QeUDX7fe8/zSb+FJXW+CJP6oE+dsTBlypTX
        Ib//VdYEUO6fsM4L8Ygsn81KfEeX7qa0zL514rf+vWRlfk6O9vatMzIm5ScJlzHNdXIxi3VGiCfy78na
        yvGsj7P6RtB4UMlKvLLGm18moAzmljTPRTxUJEFkE0qmX14qY2nvm0mk619yReIal8uOK4qYwEVlTEA+
        D1tngjimZMtwcgiN+am9Wo3rUXH/NoTO2JHPhCXnBJ7H3/da54M4QlaRZfobem5qBFgjD4190oJrK63s
        w/etsUrIxGBW7uvAldZ5II6QTSXKSrACrWozkEZ1iyVLZENorBryiVCuGdOWa75PglQZ2USj3VEWqlXN
        rwTXBv+vpLULobOK5NefaVcM3olHcG1AlcFL/Efly7+rEeja6hKt/xr87c4hNFaZbPN9jSqDreHn1LTI
        lONAtBx7hdCHCraLtoVC8H8shMaqM2PGjFejrO5VlvGt1vqJEjnOShlc14bSmG2+W1BTMe+V2e5QOquO
        GLrWaPlptaLg5X1R2fXbO4Q+BPFApjvRdwMq5dtCaCyCbKiRw1BkqbSsabDWM5xMuT5ADi+11k4UZJvv
        lo+2y4ffO1NZIb8TSuNYINDfJGcMQNdjw01KylKOCO/p6XmttU4hvzxluaLMN8pnWmv9pAB5918TXEcH
        kigHfTyu0LdWVjUG0tiV/DTfb47nTIV89+TB1poF7WIrOSzVWjspAF7YcYqX/EyZM+8L6tOu+T8vhL7R
        yD+t/qyg7g0xTFrKWRCaq9LlxGT8OT8JVgW8tB8qXnKwBTX50ddF9b1oeGR3B+m5XKM0L5mEO9xYv5T9
        VzT65RQpa+1kfEzQnBSD8exhIcQNDAxsnSmWJotphNA3GtDxUWXwd9IK69N38rkAzcawb1vqJuNE9uwr
        Xu4auXEnhD781t9pgsf6TD+ZzHN0TfoZlvkQNNeqSaOCP+UwIHZkV5zi5V4fSp/yoM+HG8aVD7rf7SD4
        JT1unRdZ4afRHuJMCFISvKh/VRjA6QH1LVJUvtNC6RtF97ccGYCknSzzkp8s/FtFPflnS91kHGSKBR+h
        xv/Tpk2bqmx5vF7SOR4yR5eo5IH0N9b5gYazFdq5TTh2MsX6/1AHQCCQ/15R6e4LoW0soOM2hwYQar1F
        V/Au3q7QvrwRaJMYUVJ0Dzj++xcagV5qpjjwU+YMQmgbC2i5ypUBxLDLLj99ufAhLPi7Xa21k1EoeuNP
        vsgjlLaiC2gkHRFK32hkyqXLI6UI1jNsAu/jBoX+Wda6SRfkU5Xihf4klD781tMFtck69B1D6RsNBMtM
        Rwbwv9Z56QAtJyv0f9FaN+lCvsij6AudF0Jbf3//DkW1Ieh+E0LbOJFVgL8uawAxXcAh14sp8nCZtW7S
        BelaKl7opSG0yVJShQFcHULbeIGmQ8sEvwy3ZCORdT465FeLFc3DPda6SRfkiCzFC70ghDb81ocU2s4K
        oa0Imf6IdbmxaBdr/cOYoLiDcXUjwEnRRIFc2qmomN8LoS1THFAiuxpDaCuIDAWKLgqSffj7WwsfCei6
        s+h7kZ6DtW4yAn19fW1FkF0eQht+6+tFtaHF3C+ENg0ot6Oy8Z1pMF/ei7XebmSK26Ij7MkQIb8CrGgP
        IMgZgDLUUJhT1Kf+ypHkcgsxtF6J9FC2+bu6fOm4G2kuAv+vrDWOhaI38/tYezO1B878BsXLvD2Etkxx
        ACiPovJPpjs23PxcA9KFrOBee9niGkhX4YM0YlkDkDJ4/58t+l5kSbe1btIF+XaueKHbBtB1a1FdMZ6u
        mxpycKnivRxjrZt0AS/oxqIvFGPVGb51oaLdUVRXgxtPvAPzP14xBPiwtW7SBc1kG9KxAXTdXFQX7/3z
        D8r5BEV9OdJaN+mCpkuHdGEAXT8uqqunp2d737rqDsp5dtH3IqdOWesmXZBv50VfaIgdgbKsV6EryDkF
        dUZzSjCvDo8YOXU2U9wDh5fa9KkLv3FxUU1ydbhPTUR9glR0V7ORIWS6XWuf9KxpjkITvzd7RjM0Y88s
        cuTaKkWweV0QJNtgFZpO8KmJbKor9yt6APw8GzPSciqCbaPcbOtLEyraexUtzfm+9JCXjgVbX/C9LLPW
        TcZAczdgnk71pUk2kCj0LPClh2x6J7vynSQGXtAshat30uKGp73e+XFlGwr2AFbJGfY+9BD1GQ1Bzo8g
        CvBy3lf0UNARXvCBvvTh+Q8rNO3uS0/dQdleqKgfJ1rrJiNQsuUfmuZ41HilQo/XrxN1BsH8gOJ9HGCt
        mwzDYfBf43OGFxXuUxpNvvTUGbzn6Yp3sSHExjFSABfd/jxd6/vzDirPXoou59p2u72NT111JFPsAcC7
        uNdaNxlCVVr+DvIbEtCKivc+39rqBsr1JkU9+ba1bpJTpZZ/mO7rFBqvCqWvDuTHgRduOEJdIkvGoKrB
        L2hWBEpem83mlJA6Uwbl+TnFO3hhYGBga2vttSerWLd/OHLVt0Yv/u4zobUmysRM8TlWem7WwmtP1YO/
        g0wmKSrgo4ODg1tYaU6FTLdMXLr/H7HWXmuq3O0fIS8nKXsBH7TUnQIoxwUK831Btplba68tqbT8HfJJ
        qELLgvO0iEuD9cgqT2W94SSsFakFfwfpiWjygUr8D9baK4qM/QtfA5Zt7v6/x1p8LUk1+IVMf9Pu0sHB
        wa2s9VcNOctfWd6LGzydOTwpjfm7MEFzGEWezrQWXyVkJaVMoip7XNz8E5qUW/6hKE8w7qwL2M1af1VA
        eZ2rLOdVKOftrPXXiroEvyDn/kPnb5X5uwst25bWeYgd1IF9M92EqxjAV6z114oadPtfgfKswE4FPcta
        f8xI640yWqJt/Xk3Y0Dq1PIPJd8gpBqfIm1stVoHW+chUiagfOaVMNcvWWegNtSx5R9Kbn7aivpMX1/f
        m63zEBsom9NKlOkT3PcfiLq2/MOQLwI/K1Fhf8NrxF4G9eD9meJymCFplnUeagGD/2XkhuKSZbGA6wM2
        1akDNGcuDDHTW/GYCdb5SJ66d/tHAnk5o0xZoDxvSKUsNCD/e8jkXYnyW8vhVAAY/CMjn/VQLr8qWSY3
        1nHfOsptH6SVJcuOB7D6JqtBt7/Mtt28FStrjgvqNCeQbV5Wvbpk70m6/lzy65M6tPwS/HIVeJk75JWn
        Bw+v0A80m81Bl3mLEbkFCmldyfJaJqcEW+claerQ8ud3zV2T63yohM4J+PurHJjAylTvss+HS+c7qE8b
        8J7eYZ2fpKlh8HfSbO3z8lVs2s1CQ9NGWTGY0rJhmahDnu5xUDZikp+3zk/S1Dj4Ja1GZW1rnyt/iwr6
        lIuKjrRQLsN0mW8DJuUbqEqN94cE/yV4Jj/5+aJOY/5RtN/YKFHJ8stE1jiq8PIuvl7FrwTQvjO03+7I
        DKUsbkmpVxQdNW/5h6djS/7OYQ4muoZW/gckoFyVg2dkleSJjhqSTlpYp68kwWHwvyLgVpUZCgh4zhGO
        yrSj6Rk5otxVefhCxugOA1/y/cv+/v4drPOVLAz+rmlB2QM95Vgrxy3h7a7KxAdy6Emm3MvfJfhlkdVk
        63wlC4N/zFT66nE84xCk510FBfLzNhfl4gPou9Ch2d3Gbr9HGPzjShtd3C+HnsCeeNZyR63iSS7KxgfQ
        9qCj4J8/efLk11vnJ1kY/IXSMhe79vIrxn7twAC+6aJ8fOBo4nMu71LwCD/1FUrr8ZyjHOraCs+8oqSm
        81zpcU1JY1vLm5Q8k9Wg5ZfWA/rmuwj+zM9BE/KZ7FNyfRUN4KW0CPVpF2v9SVOH4Begb27Ewf8S+Yz5
        IhpAdp6ctmytPWnqEvyy5txBPr0Hfwd0ed9ScwO4y1pz8tRhzN8B+fxG2eB3OeYfi/xYsdoaAMr6F9aa
        k6YuLX+HTNelDt7yd6AB0AC8UbfgF6D1uaoEv0ADoAF4oU7d/qFogz9kt38oNAAagHPqGvxClYJfoAHQ
        AJyS1bDbP5SqVUAaAA3AGXVu+TtUrQLSAGgATmDwb6ZqFZAGQAMoDYP/ZapWAWkANIBSMPj/kKpVQBoA
        DUCNXGSR1XjCbySqVgFpADQAFfnecu2ilySDX6haBaQB0ABUoPB+yOB/JVWrgDQAGkBh0PpvW2IveScl
        MeYfTtUqIA2ABlAYFNqBbPlHpmoVkAZAAygMCu1oBv/IVK0C0gBoAIWR65WVwZ9kt38oVauANAAaQGE0
        BoC/uS714BeqVgFpADSAwigN4Dhr3SGoWgWkAdAACkMD6E7VKiANgAZQGBpAd6pWAWkANIDCVM0Ams3m
        dr29ve9AOkZ0+ExVq4A0ABpAYapiAPkR3Vc62qzkJVlXQBoADaAwVTAA/OYsuerJOsBjr4A0ABpAYWI3
        AHT135m52aVIA6ABkOHEbADtdnsb/NbvrAO7KhWQBjD9iWnTpk211l0pYjYA/M6J1kFdsFx+HqJculF3
        A8jfwf00gQJEbgC3Wgd1wfTfIcqlGwkagGroRxMoQOQG8FQEQV0kzQ1RLt1I0ACWat8FTWCcxGwA+K2N
        EQR1kXKZGaJcupGgAcwr+T5oAmMRuQGYB3WBMrk5RJmMRmoG0Gq1PuDgvdAERoMG4CQtR+oPUSajkZoB
        gInQdzdNwCM0gNJpKcpjjxDlMRYJGkDnwNrlNAFP0ADUFWoV0jfa7faOIcpiPKRoAAI07o60gibggZQM
        ALqWBNggJMuS94nxQJRUDUCAzrfSBDyQmAHUeiloygYguDIBpPt6enq2t85PFNAA0iF1AxAcmoDpoq1o
        oAGkQx0MQHBlAq1W62DrvJhDA0iHuhiA0Gw2d4P2ZSVN4ArrfJhDA0iHOhmAID0BvPOVJQxghXUezKEB
        pEPdDEDITUB9td2UKVNeZ50HU2gA6VBHA8A7P71ED2A9HjHJOg+m0ADSoW4GgPf9tRLBv2lNgHUezKEB
        pEOdDKBs8Of15SzrfJhDA0iHuhhAyW5/J61BeU2zzos5NIB0qIMBOAp+WQNwvHVeooAGkA6pG4CLbn+e
        zrTOSzRoDABpsQSb70QDKEbKBuAq+OU51nmJCqUBRJloAGkagKtuP55ztnVeooMGkA4pGgCD3zM0gHRI
        zQAY/AGgAaRDSgbA4A+EXLNtHbgO023W5WlJKgbACb+AoJAOiiBwnSTk5XLr8rQkBQNg8Aem2Wxuh8Ja
        Zx28jtIJ1uVpSdUNAFrmMPgNQKFdEUHwlk1r2u12j3VZWlJlA3A1FGXwK0Dhv0kCKIIgLvPiv2xdjtZU
        1QBarda2WfnTfRj8ZUABHom0wTqQlenamTNnvsq6DK2pqgFAw0cZ/BGAgjwEBflkBAE93rQBes8dHBzc
        wrrsYqCqBoB3eDWDPxIGBga2RqF+EoV6S6RmsBppEbSdg7SzdXnFRIUN4F4GPyElqakBcKEPIUKFDeA/
        OQQgpCRVNQBo+KeyQ0OaAKk9VTWA/DPg0w5MgMMBUl+qagACgvfosgbAngCpNVU2ACHjUmBC9FTdAARu
        AyZESQoGINAECFGQigEINAFCCpKSAQg0AUIKkJoBCDQBQsZJigYg0AQIGQepGoBAEyBkDFI2AMHh1WBn
        WOeFEOekbgCCQxP4kHVeCHFKHQxAcDEcwDNWtdvtHa3zQogzNAaAQHikt7d3V2vtRXHUEzjZOh+EOEPZ
        A5Akpywdaa2/KGVNAH9/s3UeCHEGWvJdSgbE2VU7XBWaf1Qiz0ut9RPijGazOcXB2PiG/v7+HazzMh5g
        eJ+A3hdL5Pdp6zwQ4pKJCIinHIyNF8c8L9DT0/NaaPyeA7O7wzovhDhFjkl3YADRzgu0Wq0mdN3pKI9z
        rPNDiFPyAHnOUYBENS+AXsl+0PM7R/lah7J6o3WeCHFOfs/eRocmYD4v4GC8PzxPtb9KjiQMKvmxLgMm
        M5oXcDXeH5YujaVXQ4g3ELD7uuoy5ynovIDj8X50QxpCvCNXpqPS/4/jFvS8GTNmvNqnbvzG3tD9hEPN
        a2Ro5FMzIVECE9gSwXSBYxP4KdJkH3qh9TiZpHPY6j+Kf3f3oZWQyhB7YKGFfg2e+d2qGBUhlSPWrnU+
        VLnDcfB7H6oQUjlimxeI1ZQISZZYutuxD0sISRqrAIzFgAipPaG74LENQQipPaGCMrTZEELGie9uOcf7
        hFQABNbHHe8j+D+ky1waSwwblAhJFg9dda9DC0KIYzzNC5RJHO8TEhJP8wKaLj/H+4RY4XoCr2D6acbv
        +4TYktnMC3C8T0gsBJwX4HifkBjxPS/A8T4hFcDTvADH+4RUBcfzAhzvE1I1HMwLcLxPSJXRzgtwvE9I
        QhScF+B4n5DUaLVae8IE7h+ty4///1N4Pj8hiSLBjUA/HOkipAVICxH0VyOdxFafEEIIIYQQQgghhBBC
        CCGEEEIIIYQQQgghhBBCCCGEEJIU/w8gveOx2IIgpQAAAABJRU5ErkJggg==
</value>
  </data>
</root>