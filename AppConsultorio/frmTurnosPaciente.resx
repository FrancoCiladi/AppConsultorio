<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>