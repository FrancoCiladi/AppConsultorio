<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>